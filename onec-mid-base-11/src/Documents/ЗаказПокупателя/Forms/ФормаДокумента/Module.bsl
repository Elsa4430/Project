
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// НачалоДоработки    
	// Рассчитать сумму с учетом согласованной скидки
	// Исходный код:
	// КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	// ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	//
	// Новый код:
	ОбщаяСкидка = Объект.Д_СогласованнаяСкидка + ТекущиеДанные.Скидка;
	
	Если ОбщаяСкидка > 100 Тогда  
		ОбщаяСкидка = 100;  
	КонецЕсли;
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * (1 - ОбщаяСкидка / 100)  * ТекущиеДанные.Количество;  
	// КонецДоработки
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура Д_СогласованнаяСкидкаПриИзменении(Элемент)  
	
	// НачалоДоработки  
	// Если табличная часть товаров/услуг заполена,
	// при изменении размера скидки задается вопрос о пересчете
	Если Объект.Товары.Количество() > 0 Или Объект.Услуги.Количество() > 0 Тогда   
		Д_ЗадатьВопросОПересчете();
	КонецЕсли;      
	// КонецДоработки

КонецПроцедуры

&НаКлиенте
Асинх Процедура Д_ЗадатьВопросОПересчете()
	
	// НачалоДоработки 
	// При изменении размера скидки или нажатии кнопки "Пересчитать таблицу" задается вопрос о пересчете
	Режим = РежимДиалогаВопрос.ДаНет;
	ТекстВопроса = "Пересчитать стоимость с учетом скидки?";    
	
	Ответ = Ждать ВопросАсинх(ТекстВопроса, Режим);    
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Д_ПересчитатьТаблицуСоСкидкой();
	КонецЕсли;
	// КонецДоработки

КонецПроцедуры    

&НаКлиенте
Процедура Д_КомандаПересчитатьТаблицу(Команда)

	// НачалоДоработки
	// При нажатии кнопки "Пересчитать таблицу" задается вопрос о пересчете
	Если Объект.Товары.Количество() > 0 Или Объект.Услуги.Количество() > 0 Тогда   
		Д_ЗадатьВопросОПересчете();
	КонецЕсли;      
	// КонецДоработки

КонецПроцедуры

&НаКлиенте
Процедура Д_ПересчитатьТаблицуСоСкидкой()

	// НачалоДоработки   
	// Пересчитывается сумма по всем строкам табличной части 
	Для Каждого Строка Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(Строка);   
	КонецЦикла;

	Для Каждого Строка Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(Строка);   
	КонецЦикла;
	// КонецДоработки

КонецПроцедуры     

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
